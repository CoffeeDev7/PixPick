/* BoardPage.css */
.boardpage{
  background: linear-gradient(90deg, rgba(141,167,168,1) 0%, rgba(188,205,212,1) 50%, rgba(168,153,150,1) 100%);
  border-radius: 0px;
}

.image-grid {
  column-count: 6;
  column-gap: 12px;
}
@media (max-width: 1200px) {
  .image-grid {
    column-count: 5;
  }
}
@media (max-width: 992px) {
  .image-grid {
    column-count: 4;
  }
}
@media (max-width: 768px) {
  .image-grid {
    column-count: 2;
  }
}
.image-item {
  break-inside: avoid;
  margin-bottom: 12px;
  position: relative;
}
.image-item img {
  width: 100%;
  height: auto;
  border-radius: 8px;
  display: block;
  cursor: pointer;
}
.skeleton-wrapper .rect {
  width: 100%;
  border-radius: 8px;
  padding-bottom: 66%;
}
.empty-grid {
  text-align: center;
  color: #666;
  padding: 40px 20px;
  font-style: italic;
}
.overlay {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(255,255,255,0.9);
}

/* Reorder / jiggle visuals */
.image-item.jiggle {
  animation: jiggle 0.9s ease-in-out infinite;
  transform-origin: 50% 50%;
}
@keyframes jiggle {
  0% { transform: rotate(-1deg); }
  25% { transform: rotate(1deg); }
  50% { transform: rotate(-1deg); }
  75% { transform: rotate(1deg); }
  100% { transform: rotate(-1deg); }
}

/* dragging visual */
.image-item.dragging {
  opacity: 0.65;
  transform: scale(0.98);
  box-shadow: 0 18px 40px rgba(0,0,0,0.32);
}

/* drop target ring */
.image-item.drag-over {
  outline: 3px dashed rgba(27,153,159,0.9);
  outline-offset: -8px;
}

/* reorder controls buttons */
.reorder-controls button {
  font-weight: 700;
  line-height: 1;
  width: 34px;
  height: 34px;
  display: inline-grid;
  place-items: center;
  box-shadow: 0 6px 18px rgba(0,0,0,0.12);
}

/* ensure image container has position:relative so overlays position right */
.image-item {
  position: relative;
}

/* Reorder visual */
.image-item.jiggle {
  animation: jiggle 0.9s ease-in-out infinite;
  transform-origin: 50% 50%;
}
@keyframes jiggle {
  0% { transform: rotate(-1deg); }
  25% { transform: rotate(1deg); }
  50% { transform: rotate(-1deg); }
  75% { transform: rotate(1deg); }
  100% { transform: rotate(-1deg); }
}

.image-item.dragging {
  opacity: 0.65;
  transform: scale(0.98);
  box-shadow: 0 18px 40px rgba(0,0,0,0.32);
}

.image-item.drag-over {
  outline: 3px dashed rgba(27,153,159,0.9);
  outline-offset: -8px;
}

.reorder-controls button {
  font-weight: 700;
  line-height: 1;
  width: 34px;
  height: 34px;
  display: inline-grid;
  place-items: center;
  box-shadow: 0 6px 18px rgba(0,0,0,0.12);
  border-radius: 8px;
}

/* ensure image container is positioned for overlays */
.image-item { position: relative; }

/* text area styling  */
.my-textarea-input {
  display: block;
  width: 100%;
  height: 40px; /* default height */
  max-height: 200px; /* maximum expanded height */
  border: 2px dashed #4caf50;
  background: #eaffea;
  font-size: 16px;
  margin-bottom: 16px;
  padding: 10px;
  border-radius: 10px;
  box-sizing: border-box;
  transition: height 0.3s ease, box-shadow 0.3s ease, border 0.3s ease, background 0.3s ease;
  outline: none;
  overflow: hidden;
  resize: none;
}

/* Hover effect */
.my-textarea-input:hover {
  height: 60px; /* expanded height */
  box-shadow: 0 6px 15px rgba(0,0,0,0.1);
}

/* Focus effect for styling when clicked */
.my-textarea-input:focus {
  border: 2px solid #2196f3;
  background: #e3f2fd;
}
.my-textarea-input::placeholder {
  /* Initial state: placeholder is fully visible */
  opacity: 1;
  
  /* Set a long transition duration for the fade-out effect */
  transition: opacity 1s ease-in-out;
}

.my-textarea-input:not(:focus):not(:hover)::placeholder {
  /* When not focused AND not hovered, set opacity to 0 */
  opacity: 0;
  background: linear-gradient(90deg,rgba(167, 201, 115, 1) 0%, rgba(6, 103, 112, 1) 55%, rgba(129, 227, 102, 1) 100%);
}