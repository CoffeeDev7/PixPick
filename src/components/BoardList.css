/* smooth theme transitions */
.search-row,
.search-input,
.view-popover,
.segmented-pill,
.seg-btn {
  transition: background-color 180ms ease, color 180ms ease, border-color 180ms ease, box-shadow 180ms ease;
}

/* default / light (you already have similar rules; these are safe overrides) */
.search-input {
  background: #fff;
  border: 1px solid #e6e6ea;
  box-shadow: 0 1px 0 rgba(255,255,255,0.6) inset;
  color: #222;
}

/* input & placeholder */
.search-input input {
  background: transparent;
  color: inherit;
}
.search-input input::placeholder {
  color: #9aa0a6;
  opacity: 1;
}

/* clear button inside search */
.clear-btn {
  border: none;
  background: transparent;
  cursor: pointer;
  color: #666;
  padding: 0 6px;
  font-size: 16px;
  line-height: 1;
}

/* view popover default */
.view-popover { background: #fff; color: #222; }

/* segmented pill defaults */
.segmented-pill { background: #ffffff; border: 1px solid rgba(16,16,20,0.08); box-shadow: 0 1px 0 rgba(255,255,255,0.6) inset; }
.seg-btn { color: #5b5b66; background: transparent; }
.seg-btn.active { background: #1b999f; color: #fff; }

/* ------------------ DARK MODE ------------------ */
@media (prefers-color-scheme: dark) {
  /* overall component text */
  .boardlist-root { color: #e6e6e6; }

  /* search input */
  .search-input {
    background: #111315;               /* dark card */
    border: 1px solid rgba(255,255,255,0.06);
    box-shadow: none;
    color: #e6e6e6;
  }
  .search-input input { color: #e6e6e6; }
  .search-input input::placeholder { color: #9a9a9a; opacity: 0.9; }

  /* icons + clear button */
  .search-input svg { color: rgba(255,255,255,0.75); opacity: 0.9; }
  .clear-btn { color: rgba(255,255,255,0.75); }

  /* view popover (dropdown) */
  .view-popover {
    background: #0f1112;
    border: 1px solid rgba(255,255,255,0.06);
    color: #e6e6e6;
    box-shadow: 0 12px 36px rgba(0,0,0,0.6);
  }

  /* segmented pill + buttons */
  .segmented-pill {
    background: rgba(255,255,255,0.02);
    border: 1px solid rgba(255,255,255,0.04);
    box-shadow: none;
  }
  .seg-btn {
    color: #cfcfd6;
    background: transparent;
  }
  .seg-btn:hover { background: rgba(255,255,255,0.02); }
  .seg-btn.active {
    background: #1b999f; /* keep your accent â€” it's readable on dark */
    color: #fff;
    box-shadow: 0 6px 14px rgba(0,0,0,0.6);
  }
}


/* INLINE STYLING BROUGHT HERE FOR EASIER MAINTENANCE */

:root { --max-width: 640px; --gap: 14px; --card-radius: 12px; }
.container { width: 100%; max-width: var(--max-width); }
.board-grid { display: grid; gap: var(--gap); }
.board-item { background: linear-gradient(90deg,rgba(141, 167, 168, 1) 0%, rgba(188, 205, 212, 1) 50%, rgba(168, 153, 150, 1) 100%);; border-radius: var(--card-radius); overflow: hidden; box-shadow: 0 6px 18px rgba(12,12,16,0.05); cursor: pointer; position: relative; }
.board-item:hover { transform: translateY(-6px); box-shadow: 0 14px 30px rgba(12,12,16,0.08); }
.board-cover { padding: 8px; box-sizing: border-box; gap: 6px; display: grid; }
.main-image, .preview-images { border-radius: 10px; overflow: hidden; background: #ddd; }
.main-image img { width: 100%; height: 100%; object-fit: cover; object-position: top center; }
/* WIDE: preview-images as two equal rows, no gaps left behind */

.wide .preview-images img {width: 100%;
  height: calc(50% - (6px / 2));
  object-fit: cover;
  object-position: top center;
  display: block; }
.compact .preview-images { display: grid; grid-template-rows: 1fr 1fr; gap: 1px; }
.compact .preview-images img { width: 100%; height: 100%; object-fit: cover; display: block; }
.board-grid.compact { display: grid; grid-template-columns: repeat(2, 1fr); gap: 8px; }
.compact .board-cover { display: grid; height: 150px; grid-template-columns: 1.8fr 1fr; gap: 2px; padding: 2px; }
.board-grid.wide { display: grid; grid-template-columns: 1fr; gap: var(--gap); }
.wide .board-cover { height: 180px; grid-template-columns: 1.5fr 1fr; }
.board-grid.plain .board-cover { display: none; }
.board-info { padding: 10px 12px 14px; }
.board-title { margin: 0; font-size: 15px; font-weight: 600; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
.board-meta { margin: 6px 0 0; color: #7b7b84; font-size: 13px; }

/* segmented pill (kept for popover control) */
.segmented-pill { display: inline-flex; align-items: center; gap: 6px; background: #ffffff; border-radius: 999px; padding: 6px; border: 1px solid rgba(16,16,20,0.08); box-shadow: 0 1px 0 rgba(255,255,255,0.6) inset; }
.seg-btn { display: inline-flex; align-items: center; justify-content: center; width: 40px; height: 40px; border-radius: 999px; cursor: pointer; transition: all 160ms ease; user-select: none; color: #5b5b66; background: transparent; border: none; outline: none; }
.seg-btn:hover { transform: translateY(-2px); background: rgba(16,16,20,0.03); }
.seg-btn.active { background: #1b999f; color: white; box-shadow: 0 6px 14px rgba(16,16,20,0.16); transform: translateY(-1px); }
.seg-labels { display: inline-flex; gap: 10px; margin-left: 10px; align-items: center; color: #6b6b75; font-size: 13px; }

/* search */
.search-row { display: flex; gap: 8px; align-items: center; margin-bottom: 12px; }
.search-input { flex: 1; padding: 10px 12px; border-radius: 10px; border: 1px solid #e6e6ea; background: #fff; box-shadow: 0 1px 0 rgba(255,255,255,0.6) inset; display: flex; align-items: center; gap: 8px; }
.search-input input { border: none; outline: none; flex: 1; font-size: 14px; }
.view-popover { position: absolute; top: 46px; right: 0; background: #fff; border-radius: 10px; padding: 10px; box-shadow: 0 12px 36px rgba(0,0,0,0.12); z-index: 150; }
/* skeleton */
.skeleton { background: linear-gradient(90deg, #e9e9eb 0%, #f3f3f4 50%, #e9e9eb 100%); background-size: 200% 100%; animation: shimmer 1.2s linear infinite; }
.skeleton.rect { width: 100%; height: 100%; border-radius: 10px; }
.preview-skeleton { width: 100%; height: 50%; border-radius: 6px; }
@keyframes shimmer { 0% { background-position: 200% 0; } 100% { background-position: -200% 0; } }
.board-grid,
.board-grid.compact,
.board-grid.wide,
.board-grid.plain {
background: linear-gradient(
90deg,
rgba(27, 153, 159, 1) 0%,
rgba(87, 173, 199, 1) 50%,
rgba(238, 108, 77, 1) 100%
);
padding: var(--gap); /* optional, so gradient peeks between cards */
border-radius: var(--card-radius); /* optional, makes it rounded like cards */
}

